{"version":3,"sources":["components/auxiliaryComponents/ErrorSnackBar/ErrorSnackBar.module.css","components/Main/main.module.css","components/cityName/CityName.module.css","components/weatherInCity/WeatherInCity.module.css","reportWebVitals.ts","store/app-reducer/app-selector.tsx","store/app-reducer/app-reducer.ts","components/auxiliaryComponents/ErrorSnackBar/ErrorSnackBar.tsx","api/instance.ts","store/main-reducer/main-reducer.ts","components/cityName/CityName.tsx","components/weatherInCity/WeatherInCity.tsx","components/Main/Main.tsx","app/App.tsx","store/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","selectorStatus","state","app","status","selectorError","error","initialState","setAppStatus","type","setAppError","ErrorSnackBar","props","dispatch","useDispatch","className","style","notification","text","errorMessage","close","onClick","setCityAPI","city","axios","get","sity","data","main","humidity","temp","weather","icon","CityName","useState","setCity","styles","cityName","placeholder","value","onChange","e","currentTarget","onKeyPress","key","a","res","Math","round","setCityTC","WeatherInCity","React","memo","useSelector","weatherMain","toUpperCase","src","Main","App","CircularProgress","rootReducer","combineReducers","action","map","el","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa963c21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"ErrorSnackBar_notification__3pdaN\",\"text\":\"ErrorSnackBar_text__3swf5\",\"close\":\"ErrorSnackBar_close__1Utq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__36TM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cityName\":\"CityName_cityName__35SBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherMain\":\"WeatherInCity_weatherMain__1BWhY\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {AppRootStateType} from \"../store\";\r\nimport {RequestStatusType} from \"./app-reducer\";\r\n\r\n\r\nexport const selectorStatus = (state: AppRootStateType): RequestStatusType => state.app.status\r\nexport const selectorError = (state: AppRootStateType): string | null => state.app.error\r\n","const initialState = {\r\n    status: 'succeeded' as RequestStatusType,\r\n    error: null as string|null,\r\n\r\n}\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: ActionsType): AppInitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'APP/SET_STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET_ERROR':\r\n            return {...state, error: action.error}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatus = (status: RequestStatusType) =>\r\n\r\n    ({type: 'APP/SET_STATUS', status} as const)\r\nexport const setAppError = (error: string | null) =>\r\n    ({type: 'APP/SET_ERROR', error} as const)\r\n\r\n\r\nexport type RequestStatusType = 'succeeded' | 'loading'\r\n\r\nexport type AppInitialStateType = typeof initialState\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof setAppStatus> |\r\n    ReturnType<typeof setAppError>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import style from './ErrorSnackBar.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppError} from \"../../../store/app-reducer/app-reducer\";\r\n\r\n\r\n\r\ntype ErrorSnackBarPropsType = {\r\n    errorMessage: string\r\n}\r\n\r\nexport const ErrorSnackBar = (props: ErrorSnackBarPropsType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickHandler = () => dispatch(setAppError(null))\r\n\r\n    return (\r\n        <div className={style.notification}>\r\n        <div className={style.text}> {props.errorMessage} </div>\r\n        <div className={`${style.close}`}>\r\n            <div className={style.text} onClick={onClickHandler}>X</div>\r\n        </div>\r\n    </div>)\r\n};\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nexport const setCityAPI = {\r\n    setCity(city: string) {\r\n        return axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=682fd6ac1cf1ff852dbf911b18a18d9e`)\r\n    },\r\n    setIcon(icon: string) {\r\n        return axios.get(`https://openweathermap.org/img/wn/${icon}@2x.png`)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {setCityAPI} from \"../../api/instance\";\r\nimport {setAppError, setAppStatus} from \"../app-reducer/app-reducer\";\r\n\r\n\r\nconst initialState = {\r\n    sity: 'Your city',\r\n    data: {\r\n        main: {\r\n            humidity: null as number | null,\r\n            temp: null as number | null,\r\n        },\r\n        weather: [{\r\n            main: null as string | null,\r\n            icon: null as string | null\r\n        }]\r\n    } as DataType\r\n}\r\nexport  type DataType = {\r\n    main: {\r\n        humidity: null | number\r\n        temp: null | number\r\n    },\r\n    weather: Array<{\r\n        main: null | string\r\n        icon: null | string\r\n    }>\r\n}\r\n\r\nexport const mainReducer = (state: MainInitialStateType = initialState, action: ActionsType): MainInitialStateType => {\r\n    switch (action.type) {\r\n        case \"MAIN/SET_SITY\": {\r\n            return {...state, sity: action.sity}\r\n        }\r\n        case \"MAIN/SET_TEMP\":\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    main: {\r\n                        ...state.data.main,\r\n                        temp: action.temp\r\n                    }\r\n                }\r\n            }\r\n        case \"MAIN/SET_HUMIDITY\":\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    main: {\r\n                        ...state.data.main,\r\n                        humidity: action.humidity\r\n                    }\r\n                }\r\n            }\r\n\r\n        case \"MAIN/SET_MAIN\":\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    weather: state.data.weather.map(el => {\r\n                        return {...el, main: action.main}\r\n                    })\r\n                }\r\n            }\r\n        case \"MAIN/SET_ICON\":\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    weather: state.data.weather.map(el => {\r\n                        return {...el, icon: action.icon}\r\n                    })\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCityAC = (sity: string) =>\r\n    ({type: 'MAIN/SET_SITY', sity} as const)\r\nexport const setTempAC = (temp: number) =>\r\n    ({type: 'MAIN/SET_TEMP', temp} as const)\r\nexport const setHumidityAC = (humidity: number) =>\r\n    ({type: 'MAIN/SET_HUMIDITY', humidity} as const)\r\nexport const setMainAC = (main: string) =>\r\n    ({type: 'MAIN/SET_MAIN', main} as const)\r\nexport const setIconAC = (icon: string) =>\r\n    ({type: 'MAIN/SET_ICON', icon} as const)\r\n\r\n\r\n/*export const setCityTC = (city: string) => (dispatch: Dispatch) => {\r\n    return setCityAPI.setCity(city).then(res => {\r\n            dispatch(setAppStatus('loading'))\r\n            dispatch(setCityAC(city))\r\n            dispatch(setTempAC(Math.round(res.data.main.temp - 272.1)))\r\n            dispatch(setHumidityAC(res.data.main.humidity))\r\n            dispatch(setMainAC(res.data.weather[0].main))\r\n            dispatch(setIconAC(res.data.weather[0].icon))\r\n            dispatch(setAppStatus('succeeded'))\r\n        }\r\n    )\r\n}*/\r\nexport const setCityTC = (city: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        let res = await setCityAPI.setCity(city)\r\n        dispatch(setCityAC(city))\r\n        dispatch(setTempAC(Math.round(res.data.main.temp - 272.1)))\r\n        dispatch(setHumidityAC(res.data.main.humidity))\r\n        dispatch(setMainAC(res.data.weather[0].main))\r\n        dispatch(setIconAC(res.data.weather[0].icon))\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e) {\r\n        dispatch(setAppStatus('succeeded'))\r\n        dispatch(setAppError('City not found'))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setIconTC = (icon: string) => (dispatch: Dispatch) => {\r\n    return setCityAPI.setIcon(icon).then(res => {\r\n        console.log(res)\r\n    })\r\n}\r\n\r\n\r\nexport type MainInitialStateType = typeof initialState\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setCityAC>\r\n    | ReturnType<typeof setTempAC>\r\n    | ReturnType<typeof setMainAC>\r\n    | ReturnType<typeof setHumidityAC>\r\n    | ReturnType<typeof setIconAC>\r\n    | ReturnType<typeof setAppStatus>\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport styles from './CityName.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCityTC} from \"../../store/main-reducer/main-reducer\";\r\n\r\n\r\nexport const CityName = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [city, setCity] = useState<string>('')\r\n\r\n\r\n    const cityHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setCity(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            dispatch(setCityTC(city))\r\n            setCity('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.cityName}>\r\n            <input type=\"text\" placeholder={\"Enter city and press 'enter'\"} value={city} onChange={cityHandler}\r\n                   onKeyPress={onKeyPressHandler}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport styles from './WeatherInCity.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {selectorStatus} from \"../../store/app-reducer/app-selector\";\r\n\r\n\r\nexport const WeatherInCity = React.memo(() => {\r\n\r\n\r\n    const city = useSelector<AppRootStateType, string>(state => state.main.sity)\r\n    const temp = useSelector<AppRootStateType, number | null>(state => state.main.data.main.temp)\r\n    const humidity = useSelector<AppRootStateType, number | null>(state => state.main.data.main.humidity)\r\n    const main = useSelector<AppRootStateType, string | null>(state => state.main.data.weather[0].main)\r\n    const icon = useSelector<AppRootStateType, string | null>(state => state.main.data.weather[0].icon)\r\n\r\n\r\n    return (\r\n\r\n        <div className={styles.weatherMain}>\r\n            <div>\r\n                <h2>City: { city.toUpperCase()} - {temp ? temp : '__'} &deg;C</h2>\r\n            </div>\r\n            <div>\r\n                <h2>Humidity:  {humidity ? humidity : '__'} %</h2>\r\n            </div>\r\n            <div>\r\n                <h2>Main: {main}</h2>\r\n            </div>\r\n            <div>\r\n                {icon && <img src={` https://openweathermap.org/img/wn/${icon}@2x.png`} />}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React from \"react\";\r\nimport styles from './main.module.css'\r\nimport {CityName} from \"../cityName/CityName\";\r\nimport {WeatherInCity} from \"../weatherInCity/WeatherInCity\";\r\n\r\n\r\nexport const Main = () => {\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <CityName />\r\n            <WeatherInCity />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectorError, selectorStatus} from \"../store/app-reducer/app-selector\";\r\nimport {ErrorSnackBar} from \"../components/auxiliaryComponents/ErrorSnackBar/ErrorSnackBar\";\r\nimport {Main} from \"../components/Main/Main\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\n\r\nexport const App = () => {\r\n\r\n    const status = useSelector(selectorStatus)\r\n    const error = useSelector(selectorError)\r\n\r\n    return (\r\n            <div className=\"App\">\r\n                {error !== null && <ErrorSnackBar errorMessage={error}/>}\r\n                {status === 'loading' && <CircularProgress />}\r\n                <Main />\r\n            </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer/app-reducer\";\r\nimport {mainReducer} from \"./main-reducer/main-reducer\";\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    main: mainReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {App} from \"./app/App\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n    <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}